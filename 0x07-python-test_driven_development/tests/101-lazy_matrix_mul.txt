>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

>>> lazy_matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
[[58, 64], [139, 154]]

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2, 3], [4, 5, 6]])
[[9, 12, 15], [19, 26, 33]]

>>> lazy_matrix_mul([[1, 2]], [[3, 4, 5], [6, 7, 8]])
[[15, 18, 21]]

>>> lazy_matrix_mul([[1, 2, 3]], [[4], [5], [6]])
[[32]]

>>> lazy_matrix_mul([[1]], [[2]])
[[2]]

>>> lazy_matrix_mul([[1, 2, 3]], [[4, 5], [6, 7]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

>>> lazy_matrix_mul(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1, 2], [3, 4]], 1)
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

>>> lazy_matrix_mul([[1, 2], [3, '4']], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, '4']])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2], [3, 4, 5]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size
